{"version":3,"sources":["components/Nav/index.js","components/About/index.js","components/Contact/index.js","utils/helpers.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","contactSelected","setContactSelected","href","className","onClick","About","ContactForm","useState","name","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","e","target","isValid","test","String","toLowerCase","validateEmail","value","length","console","log","id","onSubmit","preventDefault","htmlFor","type","defaultValue","onBlur","rows","App","Contact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2451f905.chunk.js","sourcesContent":["import React from \"react\";\n\n\nfunction Nav(props) {\n  const { contactSelected, setContactSelected } = props;\n  return (\n    <header>\n      <h1>\n        <a href=\"./index.html\">My Profestional Profile</a>\n      </h1>\n\n      <nav>\n        <ul>\n          <li className=\"has-children\">\n            <a href=\"#my-performance\" onClick={() => setContactSelected(false)}>My Perfomance</a>\n            <ul className=\"sub-nav\">\n              <li>\n                <a href=\"#etc\" onClick={() => setContactSelected(false)}> Resume</a>\n              </li>\n              <li>\n                <a href=\"#Skill-Experience\" onClick={() => setContactSelected(false)} >Porfolio</a>\n              </li>\n            </ul>\n          </li>\n          <li>\n            <a href=\"#education\" onClick={() => setContactSelected(false)}>Education</a>\n          </li>\n          <li>\n            <a href=\"#about\" onClick={() => setContactSelected(false)}>About Me</a>\n          </li>\n          <li className={` ${contactSelected && 'navActive'}`}>\n            <a><span onClick={() => setContactSelected(true)}>Contact</span></a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\n\nfunction About() {\n  return (\n    <section >\n      <div className=\"about-me\">\n    <h2 className=\"title\" >About me </h2>\n    <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec bibendum turpis sed ex\n          condimentum molestie. Mauris condimentum lectus ut ornare dignissim. Mauris faucibus urna\n          mi, ac feugiat metus aliquam maximus. Proin aliquam justo nec diam vulputate vestibulum.\n          Aenean sollicitudin nulla at nisi ornare, nec suscipit massa eleifend. Morbi tristique\n          justo vel turpis sollicitudin, et tristique velit convallis. In hac habitasse platea\n          dictumst. Phasellus mattis nunc sed orci consequat laoreet. Praesent id nisl nibh.\n          Curabitur imperdiet ultricies mollis. In hac habitasse platea dictumst.\n        </p>\n    </div>\n    </section>\n  );\n}\n\nexport default About;\n","import React, { useState } from 'react';\n\nimport { validateEmail } from '../../utils/helpers';\n\nfunction ContactForm() {\n  const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n\n  const [errorMessage, setErrorMessage] = useState('');\n  const { name, email, message } = formState;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!errorMessage) {\n      console.log('Submit Form', formState);\n    }\n  };\n\n  const handleChange = (e) => {\n    if (e.target.name === 'email') {\n      const isValid = validateEmail(e.target.value);\n      if (!isValid) {\n        setErrorMessage('Your email is invalid.');\n      } else {\n        setErrorMessage('');\n      }\n    } else {\n      if (!e.target.value.length) {\n        setErrorMessage(`${e.target.name} is required.`);\n      } else {\n        setErrorMessage('');\n      }\n    }\n    if (!errorMessage) {\n      setFormState({ ...formState, [e.target.name]: e.target.value });\n      console.log('Handle Form', formState);\n    }\n  };\n\n  return (\n    <section className=\"about-me\">\n      <h1 data-testid=\"h1tag\">Contact me</h1>\n      <form id=\"contact-form\" onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange} />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email address:</label>\n          <input type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange} />\n        </div>\n        <div>\n          <label htmlFor=\"message\">Message:</label>\n          <textarea name=\"message\" rows=\"5\" defaultValue={message} onBlur={handleChange} />\n        </div>\n        {errorMessage && (\n          <div>\n            <p className=\"error-text\">{errorMessage}</p>\n          </div>\n        )}\n        <button data-testid=\"button\" type=\"submit\">Submit</button>\n      </form>\n    </section>\n  );\n}\n\nexport default ContactForm;\n","export function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n","import React, {useState} from 'react';\nimport Nav from './components/Nav';\nimport About from './components/About';\nimport ContactForm from './components/Contact';\n\nfunction App() {\n\n  const [contactSelected, setContactSelected] = useState(false);\n  return (\n    <div>\n      <Nav\n       contactSelected={contactSelected}\n       setContactSelected={setContactSelected}\n       ></Nav>\n      <main>\n      {!contactSelected ? (\n          <>\n            \n            <About></About>\n          </>\n        ) : (\n          <ContactForm></ContactForm>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}